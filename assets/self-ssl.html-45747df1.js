import{_ as i,X as s,Y as t,a0 as e,$ as r,a2 as n,C as o}from"./framework-9d02e721.js";const d={},l=n(`<h1 id="自签名证书" tabindex="-1"><a class="header-anchor" href="#自签名证书" aria-hidden="true">#</a> 自签名证书</h1><ul><li>生成自签名证书</li><li>解决默认浏览器提示自签名证书站点不安全</li></ul><h2 id="生成证书方式" tabindex="-1"><a class="header-anchor" href="#生成证书方式" aria-hidden="true">#</a> 生成证书方式</h2><p>简单的生成自签名证书</p><h3 id="第一种方式" tabindex="-1"><a class="header-anchor" href="#第一种方式" aria-hidden="true">#</a> 第一种方式</h3><p>通过openssl生成私钥</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>openssl genrsa -out server.key 1024
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用私钥生成自签名的cert证书文件，以下是通过参数只定证书需要的信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>openssl req -new -x509 -days 3650 -key server.key -out server.crt -subj &quot;/C=CN/ST=mykey/L=mykey/O=mykey/OU=mykey/CN=domain1/CN=domain2/CN=domain3&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果对上面参数具体的说明不太了解的，可以使用不带参数的方式，通过命令行步骤生成，参考第二种方式。</p><h3 id="第二种方式" tabindex="-1"><a class="header-anchor" href="#第二种方式" aria-hidden="true">#</a> 第二种方式</h3><p>通过openssl生成私钥</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>openssl genrsa -out server.key 1024
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根据私钥生成证书申请文件csr</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>openssl req -new -key server.key -out server.csr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里根据命令行向导来进行信息输入：</p>`,16),c={href:"https://ningyu1.github.io/site/img/ssl-cert/1.png",target:"_blank",rel:"noopener noreferrer"},g=e("img",{src:"https://ningyu1.github.io/site/img/ssl-cert/1.png",alt:"",tabindex:"0",loading:"lazy"},null,-1),p=e("figcaption",null,null,-1),u=n(`<p><strong>ps.Common Name可以输入：*.yourdomain.com，这种方式生成通配符域名证书</strong></p><p>使用私钥对证书申请进行签名从而生成证书</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>openssl x509 -req -in server.csr -out server.crt -signkey server.key -days 3650
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样就生成了有效期为：10年的证书文件，对于自己内网服务使用足够。</p><h3 id="第三种方式" tabindex="-1"><a class="header-anchor" href="#第三种方式" aria-hidden="true">#</a> 第三种方式</h3><p>直接生成证书文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>openssl req -new -x509 -keyout server.key -out server.crt -config openssl.cnf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>ps.以上生成得到的server.crt证书，格式都是pem的。</strong></p><p>我个人比较推荐使用第二种方式，如果不在乎其他参数可以使用第三种直接一步生成。</p><h2 id="解决安全提示步骤" tabindex="-1"><a class="header-anchor" href="#解决安全提示步骤" aria-hidden="true">#</a> 解决安全提示步骤</h2><blockquote><p>环境: mac/chrome</p></blockquote><figure><img src="https://kodo.justdoless.cn/blog.com/自签名证书/默认不安全.png@70" alt="默认不安全.png" tabindex="0" loading="lazy"><figcaption>默认不安全.png</figcaption></figure><figure><img src="https://kodo.justdoless.cn/blog.com/自签名证书/不安全-证书无效.png@70" alt="不安全-证书无效.png" tabindex="0" loading="lazy"><figcaption>不安全-证书无效.png</figcaption></figure><figure><img src="https://kodo.justdoless.cn/blog.com/自签名证书/证书导出.png@70" alt="证书导出.png" tabindex="0" loading="lazy"><figcaption>证书导出.png</figcaption></figure><figure><img src="https://kodo.justdoless.cn/blog.com/自签名证书/base64编码-单一证书.png@70" alt="base64编码-单一证书.png" tabindex="0" loading="lazy"><figcaption>base64编码-单一证书.png</figcaption></figure><figure><img src="https://kodo.justdoless.cn/blog.com/自签名证书/钥匙串-导入项目.png@70" alt="钥匙串-导入项目.png" tabindex="0" loading="lazy"><figcaption>钥匙串-导入项目.png</figcaption></figure><figure><img src="https://kodo.justdoless.cn/blog.com/自签名证书/选择从浏览器导出的证书文件.png@70" alt="选择从浏览器导出的证书文件.png" tabindex="0" loading="lazy"><figcaption>选择从浏览器导出的证书文件.png</figcaption></figure><figure><img src="https://kodo.justdoless.cn/blog.com/自签名证书/导入-无视错误提示.png@70" alt="导入-无视错误提示.png" tabindex="0" loading="lazy"><figcaption>导入-无视错误提示.png</figcaption></figure><figure><img src="https://kodo.justdoless.cn/blog.com/自签名证书/修改导入的证书-始终信任.png@70" alt="修改导入的证书-始终信任.png" tabindex="0" loading="lazy"><figcaption>修改导入的证书-始终信任.png</figcaption></figure><figure><img src="https://kodo.justdoless.cn/blog.com/自签名证书/重新刷新-链接安全.png@70" alt="重新刷新-链接安全.png" tabindex="0" loading="lazy"><figcaption>重新刷新-链接安全.png</figcaption></figure>`,20);function m(h,f){const a=o("ExternalLinkIcon");return s(),t("div",null,[l,e("figure",null,[e("a",c,[g,r(a)]),p]),u])}const v=i(d,[["render",m],["__file","self-ssl.html.vue"]]);export{v as default};
