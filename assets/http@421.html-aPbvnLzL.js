import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as a,c as n,b as e,d as l,e as r,f as h}from"./app-JWYqlYOI.js";const c={},d=h('<h1 id="记一次http-421状态码的排查情况" tabindex="-1"><a class="header-anchor" href="#记一次http-421状态码的排查情况" aria-hidden="true">#</a> 记一次http@421状态码的排查情况</h1><blockquote><ol><li>后台返回421状态码时，浏览器底层会自动重发一次相同的请求</li><li>F12查看只有一次请求，前端请求的返回也只有一条</li><li>通过抓包软件或者ng后台日志可以确认浏览器确认发了2条相同的请求</li></ol></blockquote><h2 id="_1-过程" tabindex="-1"><a class="header-anchor" href="#_1-过程" aria-hidden="true">#</a> 1. 过程</h2><p>一次日常版本测试中，测试同事反馈某一场景下后台日志收到:接口A有2条相同的请求日志，而接口B只有一条请求日志。</p><h3 id="_1-1-排查" tabindex="-1"><a class="header-anchor" href="#_1-1-排查" aria-hidden="true">#</a> 1.1. 排查</h3><ol><li>是不是对应的请求输出日志有两条 <ol><li>不是</li></ol></li><li>是不是接口A跨域的option请求 <ol><li>不是，这个接口虽然跨域，但是因为是简单请求，所以没有option请求。</li></ol></li><li>是不是前端代码逻辑问题 <ol><li>不是，通过F12调试看网络请求只有一个请求。对应的业务代码也只收到一次回调。</li><li>通过抓包软件查看，确实有两次相同的接口A请求</li></ol></li><li>该接口http@200成功时的日志情况 <ol><li>接口A只有一条请求记录。</li><li>查看http规范中421状态码的说明，同时找后台同事切换到其他错误码423验证，只有一条请求记录。</li></ol></li><li>老机型的部分浏览器验证 <ol><li>http@421只发了一次请求。</li></ol></li></ol><h3 id="_1-2-确认" tabindex="-1"><a class="header-anchor" href="#_1-2-确认" aria-hidden="true">#</a> 1.2. 确认</h3><ol><li>新的浏览器已经实现了http规范，在http@421时会自动重发请求</li></ol><h2 id="_2-参考" tabindex="-1"><a class="header-anchor" href="#_2-参考" aria-hidden="true">#</a> 2. 参考</h2>',9),s={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/421",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.rfc-editor.org/rfc/rfc9110#name-421-misdirected-request",target:"_blank",rel:"noopener noreferrer"};function p(f,u){const t=i("ExternalLinkIcon");return a(),n("div",null,[d,e("ul",null,[e("li",null,[e("a",s,[l("https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/421"),r(t)])]),e("li",null,[e("a",_,[l("https://www.rfc-editor.org/rfc/rfc9110#name-421-misdirected-request"),r(t)])])])])}const x=o(c,[["render",p],["__file","http@421.html.vue"]]);export{x as default};
